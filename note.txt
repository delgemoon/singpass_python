Prototype:

1. Frontend:

These templates will be implemeted.
a. a simple login template. User A logins to our application by his account to go his dashboard. 
    - dashboard should include 2 sections:
    + a list of users who allow user A to collect their info.
    + a access request link which is given to user B. The user B clicks to this link to give consent for user A
b. user B click to the link that provided by user A, a page with a single button appears, users B click to the button to redirect to singpass authorisation page,
the user B logs in with his account to give consent. then user A can see the User B info.

2. Backend.

APIs:
'/login', methods=[get, post]: a login handler.
'/dashboard/<userId>', methods=[get]: a simple dashboard for a specific user.
'/myinfo/<sessionId>', methods=[get]: a generated link that is provided to user who we want to get consent. sessionId is state parameter to call authorisation api. this link must provide to only one user.
'/callback', methods=[get]: the callback url is sent back from authorisation platform.

3. Database
for simlicity-->using nosql database-->datastore(google cloud)
a. users kind is used to validate user login. 
key: uuid
userName: 
password:
b. sessions kind is used to track the authentication process.
key: uuid. a system generated 
requester: Ex. userA
requestee: Ex. userB
personData: PersonData of userB
nonce: a system generated to avoid replay attack.


4. Security
a. relies on public key and private key below to parse token and jwt
https://github.com/jamesleegovtech/myinfo-demo-app/tree/master/ssl
b. converting https://github.com/jamesleegovtech/myinfo-demo-app/tree/master/lib/security to python.

5. deploy app on google cloud.

a. app engine flex(1st)
b. kubernetes (2nd)


Note:
https://stackoverflow.com/questions/5590170/what-is-the-standard-method-for-generating-a-nonce-in-python
https://stackoverflow.com/questions/47390278/django-auth0-a-bytes-like-object-is-required-not-str-python-3-5-2
https://myinfosgstg.api.gov.sg/dev/v2/person-sample/S9203266C/ 
T0066846F
F9477325W
S9203266C
S8979373D
S8723211E
S8116474F
S5062854Z
password: MyInfo2o15

 509  pip freeze  > requirements.txt 
  510  pip install -t lib -r requirements.txt 
  511  vim requirements.txt 
  512  pip install -t lib -r requirements.txt 
  513  vim requirements.txt 
  514  pip install asn1crypto
  515  pip install -t lib -r requirements.txt 
  516  ls
  517  gcloud info
  518  ls
  519  gcloud auth activate-service-account --key-file key.json
  520  gcloud auth init
  521  gcloud auth list
  522  gcloud app deploy
  523* clear 
  524  gcloud app deploy --project myInfo
  525* gcloud config set project myi
  526  gcloud app deploy --project myinfo
  527  gcloud auth list
  528  history
  529  gcloud auth activate-service-account --key-file=key.json
  530  gcloud auth list
  531  gcloud app deploy 
  532  gcloud app deploy 
  533  gcloud app deploy --project myinfo
  534  gcloud app deploy --project myinfo
  535  gcloud app deploy --project myinfo
  536  gcloud app deploy --project myinfo
  537  gcloud config list
  538  gcloud config set project myinfo
  539  gcloud config list
  540  gcloud app deploy --project myinfo
  541  gcloud app deploy --project myinfo
  542  gcloud app deploy --project myinfo
  543  gcloud app deploy 
  544  gcloud app deploy 
  545  gcloud app deploy 
  546  gcloud app deploy 
  547  ]
  548  gcloud app browse